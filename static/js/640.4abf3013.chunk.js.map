{"version":3,"file":"static/js/640.4abf3013.chunk.js","mappings":"iQASMA,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,MACD,OAAO,kBACAF,GACAC,EAAOE,SAGlB,IAAK,aACD,OAAIF,EAAOE,QAAQC,MACR,kBACAJ,GADP,IAEIK,SAAS,EACTD,KAAK,GAAD,eAAMJ,EAAMI,OAAZ,OAAqBH,EAAOE,QAAQC,OACxCE,YAAaN,EAAMM,YAAc,KAI9B,kBACAN,GADP,IAEIK,SAAS,EAETC,YAAa,IAMzB,QACI,OAAON,IAsDnB,EAlDoB,SAAC,GAAyC,IAAvCO,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC3C,GAA0BC,EAAAA,EAAAA,YAAWX,EAAS,CAC1CM,SAAS,EACTC,YAAa,EACbF,KAAM,KAHV,eAAOJ,EAAP,KAAcW,EAAd,KAMMC,EAAY,mCAAG,WAAOC,GAAP,8EACXC,EAAeD,EAAME,mBACrBC,EAAmBH,EAAMG,oBAG1BhB,EAAMK,SACPQ,EAAMI,gBACND,EAAiBE,OAASJ,EAAaI,QAlDpB,GA2CN,uBASbP,EAAS,CAAET,KAAM,MAAOC,QAAS,CAAEE,SAAS,KAT/B,SAUMG,EAAWR,EAAMM,aAVvB,OAUPF,EAVO,OAYbO,EAAS,CAAET,KAAM,aAAcC,QAAS,CAAEC,KAAAA,KAZ7B,2CAAH,sDAkBZe,EAAcC,GAAAA,CAASR,EA5DX,IA8DZS,GAAcC,EAAAA,EAAAA,cAChB,SAACC,GACGJ,EAAYI,EAAQ,MAExB,CAACJ,IAgBL,OAbAK,EAAAA,EAAAA,YAAU,WACN,GAAIjB,EAAWkB,QAAS,CACpB,IAAMC,EAAYnB,EAAWkB,QACvBE,EAAW,IAAIC,qBAAqBP,EAAaZ,GAIvD,OAFAkB,EAASE,QAAQH,GAEV,WACHC,EAASG,iBAGlB,CAACvB,EAAYc,EAAaZ,IAEtBT,G,utMCnFP+B,EAAe,GACbC,EAAkB,WACpB,IAAMC,EAAYC,EAAAA,EAAAA,GAAAA,EACZC,EAAYC,EAAAA,EAAAA,GAAAA,EACZC,EAAYC,EAAAA,EAAAA,GAAAA,EAClBP,EAAY,kBAAOE,IAAP,OAAqBE,IAArB,OAAmCE,KAoBnD,EAhBuB,CACbE,UADa,SACHC,GAAQ,OAAD,qHACbR,IADa,cAEfS,EAAUV,EAAaW,QAAO,SAACC,GAC/B,OAAOA,EAAKC,KAAKC,cAAcC,SAASN,EAAMK,kBAH/B,kBAKZJ,GALY,8CAQjBM,eATa,WASK,OAAD,+GACbf,IADa,gCAGZD,GAHY,+CC0B3B,EA/CsB,CAElBiB,SAFkB,SAETrC,EAAU6B,GACf7B,EAAS,CACLT,KAAM,WACNC,QAAS,OAEb8C,EAAAA,UAAyBT,GAAOU,MAAK,SAAAC,GACjCxC,EAAS,CACLT,KAAM,WACNC,QAASgD,OAGZC,OAAM,WACHzC,EAAS,CACLT,KAAM,cACNC,QAAS,UAGhBkD,SAAQ,gBAIjBC,aAvBkB,SAuBL3C,GACTA,EAAS,CACLT,KAAM,WACNC,QAAS,OAEb8C,EAAAA,iBAAgCC,MAAK,SAAAC,GACjCxC,EAAS,CACLT,KAAM,WACNC,QAASgD,OAGZC,OAAM,WACHzC,EAAS,CACLT,KAAM,cACNC,QAAS,UAGhBkD,SAAQ,iB,2DCdfE,GAAYC,EAAAA,EAAAA,IAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,SACVC,eAAgB,SAChBC,UAAW,SACXC,WAAY,GACZC,UAAW,EACXC,gBAAiB,UACjBC,QAAS,WACTC,QAAS,OACTC,WAAY,UAEhBC,QAAS,CACLJ,gBAAiB,QACjBK,YAAa,kBACbC,YAAa,IAEjBC,MAAO,CACHT,WAAYL,EAAMe,QAAQ,GAC1BC,KAAM,GAEVC,UAAW,CACPC,MAAO,SAEXC,WAAY,CACRX,QAAS,QAOblC,EAAe,GAUf8C,EAAY,EAkMhB,EAjMc,WAAO,IAAD,IAEVlE,GAAWmE,EAAAA,EAAAA,OACjBtD,EAAAA,EAAAA,YAAU,YAZU,WACpB,IAAMS,EAAYC,EAAAA,EAAAA,GAAAA,EACZC,EAAYC,EAAAA,EAAAA,GAAAA,EACZC,EAAYC,EAAAA,EAAAA,GAAAA,EAClBP,EAAY,kBAAOE,IAAP,OAAqBE,IAArB,OAAmCE,IAS3CL,KAGD,IAEH,MAA0B+C,EAAAA,SAAeC,OAAOC,YAAhD,eAAOC,EAAP,KAAcC,EAAd,KAEA,EAA4BJ,EAAAA,SAAeC,OAAOI,aAAlD,eAAeC,GAAf,WACMC,GAAeC,EAAAA,EAAAA,KAAY,SAACvF,GAAD,OAAWA,EAAMwF,cAC5CC,GAAiBF,EAAAA,EAAAA,KAAY,SAACvF,GAAD,OAAWA,KAC9C,EAA0B+E,EAAAA,WAA1B,eAAOvC,EAAP,KAAckD,EAAd,KACA,EAA4BX,EAAAA,UAAe,GAA3C,eAAOY,EAAP,KAAeC,EAAf,KACMC,EAAUtC,IACVhD,GAAauF,EAAAA,EAAAA,QAAO,MAEpBC,EAAW,mCAAG,2FACZC,EAAaxD,EAAMyD,OAAOC,OAAS,EAEnCN,IADAI,GAFY,SAQVG,EAAAA,SAAuBxF,EAAU6B,GARvB,2CAAH,qDAYX4D,EAAmB,WACrBjB,EAASH,OAAOC,YAChBI,EAAUL,OAAOI,eAGrB5D,EAAAA,EAAAA,YAAU,WAEN,OADAwD,OAAOqB,iBAAiB,SAAUD,GAC3B,kBAAMpB,OAAOsB,oBAAoB,SAAUF,MAEnD,IAGH,IA+CA,EAA0BG,EAAY,CAAEhG,WAAAA,EAAYC,WAzCjC,SAACF,GAGhB,OAFAuE,IAGW,IAAI2B,QADXlG,GAAe,EACI,SAACmG,GAChBC,YAAW,WACP,IAAMtG,EAAO2B,EAAa4E,OACpBrG,EAAc,GApEpB,EADC,GAsEmBA,EArEpB,EADC,IAwEDK,EAAS,CACLT,KAAM,kBACNC,QAASC,IAEbqG,EAAQrG,KACT,MAKY,SAACqG,GAChBC,YAAW,WACP,GAAIpG,GAAe,EAAG,CAClB,IAAMF,EAAO2B,EAAa4E,OACpBrG,EAAc,GArFxB,EADC,GAuFuBA,EAtFxB,EADC,IAyFGmG,EAAQrG,GACRO,EAAS,CACLT,KAAM,kBACNC,QAASC,SAIbqG,EAAQ,QAEb,UAKDpG,GAAd,EAAQD,KAAR,EAAcC,SAEd,OACI,+BACI,iBAAKuG,MAAO,CAAE5C,gBAAiB,QAAS6C,UAAW,KAAnD,WACI,0BACI,UAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,UAAWnB,EAAQnC,KAAMkD,MAAO,CAAE1B,MAAOA,EAASA,EAAQ,GAAlF,WAEI,SAAC+B,EAAA,EAAD,CACIpB,QAAS,CAAEnC,KAAMmC,EAAQnC,KAAMU,QAASyB,EAAQzB,SAChD8C,YAAY,gBACZC,WAAY,CAAE,aAAc,UAC5BC,SA3DP,SAACC,GAEd3B,EAAS2B,EAAMC,OAAO9E,WA4DN,SAAC+E,EAAA,EAAD,CACIC,QACIzB,EACJiB,UAAWnB,EAAQjB,WACnB,aAAW,SAJf,UAMI,SAAC6C,EAAA,EAAD,CAAYb,MAAO,CAAEjC,MAAO,mBAOtCgB,IAAU,gBAAKiB,MAAO,CAAE3C,QAAS,IAAvB,UACR,SAACyD,EAAA,EAAD,CAAWC,GAAI,CAAEzC,MAAO,OAAQ0C,OAAQ,QAAUC,KAAM,EAAGC,UAAW,IAAtE,gBACKrC,QADL,IACKA,GADL,UACKA,EAAgBrF,YADrB,iBACK,EAAsBA,YAD3B,aACK,EAA4B2H,KAAI,SAACpF,EAAMqF,GAAP,OAE7B,UAACC,EAAA,EAAD,YACI,gBACIrB,MAAO,CAAE1B,MAAOA,EAAQ,EAAI,GAAI0C,OAAQ,IAAKM,UAAW,QAExDC,IAAKxF,EAAKyF,YAEVC,IAAK1F,EAAKC,QAGd,gBAAKgE,MAAO,CAAEhD,eAAgB,SAAUO,WAAY,SAAUyD,OAAQ,IAAtE,UACI,SAACU,EAAA,EAAD,CAAY1B,MAAO,CACfjC,MAAO,UAAWR,WAAY,aAAcoE,SAAU,GAAI5E,SAAU,UADxE,SAGKhB,EAAKC,WAbED,EAAK6F,WAoBpC7C,IACG,iBAAKiB,MAAO,CAAE3C,QAAS,IAAvB,UACKqB,EAAamD,WAAWvC,OAAS,IAC9B,SAACwB,EAAA,EAAD,CAAWC,GAAI,CAAEzC,MAAO,OAAQ0C,OAAQ,QAAUC,KAAM,EAAGC,UAAW,IAAtE,SACKxC,EAAamD,WAAWV,KAAI,SAACpF,EAAMqF,GAAP,OAEzB,UAACC,EAAA,EAAD,YACI,gBACIrB,MAAO,CAAE1B,MAAOA,EAAQ,EAAI,GAAI0C,OAAQ,IAAKM,UAAW,QAExDC,IAAKxF,EAAKyF,YACVC,IAAK1F,EAAKC,QAEd,gBAAKgE,MAAO,CAAEhD,eAAgB,SAAUO,WAAY,SAAUyD,OAAQ,IAAtE,UACI,SAACU,EAAA,EAAD,CAAY1B,MAAO,CACfjC,MAAO,UAAWR,WAAY,aAAcoE,SAAU,GAAI5E,SAAU,UADxE,SAGKhB,EAAKC,WAXED,EAAK6F,SAiBD,IAAnClD,EAAamD,WAAWvC,SACrB,gBAAKU,MAAO,CAAE/C,UAAW,UAAzB,UACI,cAAG+C,MAAO,CAAEjC,MAAO,SAAnB,+CAKfE,GAAa,IAAMc,IAChB,gBAAK+C,IAAKnI,EAAYyG,WAAW2B,EAAAA,EAAAA,GAAK,UAAW,CAAEC,QAASvI,IAA5D,SACKA,IAAW,gBAAKuG,MAAO,CAAE/C,UAAW,UAAzB,UACR,cAAG+C,MAAO,CAAEjC,MAAO,SAAnB,6BAKXE,EAAY,IAAMc,IACf,0BACI,gBAAKiB,MAAO,CAAE/C,UAAW,UAAzB,UACI,cAAG+C,MAAO,CAAEjC,MAAO,SAAnB","sources":["Reducers/useLazyLoad.js","MovieServices/Initialization.js/Initialization.js","MovieServices/MovieServices.js","Components/Post/Post.js"],"sourcesContent":["//this is custom(useLazyLoad) reducer, debounce these plugin is for trigger an method on periodic set time later.\n//Depends on the page the data and the reducer call back the corresponding data.\n\nimport { useEffect, useReducer, useCallback } from \"react\";\nimport debounce from \"lodash/debounce\";\n\nconst INTERSECTION_THRESHOLD = 1;\nconst LOAD_DELAY_MS = 50;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"set\": {\n            return {\n                ...state,\n                ...action.payload\n            };\n        }\n        case \"onGrabData\": {\n            if (action.payload.data) {\n                return {\n                    ...state,\n                    loading: false,\n                    data: [...state.data, ...action.payload.data],\n                    currentPage: state.currentPage + 1\n                };\n            }\n            else {\n                return {\n                    ...state,\n                    loading: false,\n\n                    currentPage: 4\n                };\n\n            }\n\n        }\n        default:\n            return state;\n    }\n};\n\nconst useLazyLoad = ({ triggerRef, onGrabData, options }) => {\n    const [state, dispatch] = useReducer(reducer, {\n        loading: false,\n        currentPage: 1,\n        data: []\n    });\n\n    const _handleEntry = async (entry) => {\n        const boundingRect = entry.boundingClientRect;\n        const intersectionRect = entry.intersectionRect;\n\n        if (\n            !state.loading &&\n            entry.isIntersecting &&\n            intersectionRect.bottom - boundingRect.bottom <= INTERSECTION_THRESHOLD\n        ) {\n            dispatch({ type: \"set\", payload: { loading: true } });\n            const data = await onGrabData(state.currentPage);\n\n            dispatch({ type: \"onGrabData\", payload: { data } });\n\n        }\n\n    };\n\n    const handleEntry = debounce(_handleEntry, LOAD_DELAY_MS);\n\n    const onIntersect = useCallback(\n        (entries) => {\n            handleEntry(entries[0]);\n        },\n        [handleEntry]\n    );\n\n    useEffect(() => {\n        if (triggerRef.current) {\n            const container = triggerRef.current;\n            const observer = new IntersectionObserver(onIntersect, options);\n\n            observer.observe(container);\n\n            return () => {\n                observer.disconnect();\n            };\n        }\n    }, [triggerRef, onIntersect, options]);\n\n    return state;\n};\n\nexport default useLazyLoad;\n","// this file is to search movies with group of data, by using includes with lowercase converstion \n// default initial funtion also written, if its needed we cn use.\n\nimport datapage1 from \"../../Data/CONTENTLISTINGPAGE-PAGE1.json\"\nimport datapage2 from \"../../Data/CONTENTLISTINGPAGE-PAGE2.json\"\nimport datapage3 from \"../../Data/CONTENTLISTINGPAGE-PAGE3.json\"\nlet dataFullData = [];\nconst dataLoadInitial = () => {\n    const data1page = datapage1.page[\"content-items\"].content;\n    const data2page = datapage2.page[\"content-items\"].content;\n    const data3page = datapage3.page[\"content-items\"].content;\n    dataFullData = [...data1page, ...data2page, ...data3page]\n}\n\n\nconst Initialization = {\n    async getMethod(value) {\n        await dataLoadInitial();\n        let dataFil = dataFullData.filter((item) => {\n            return item.name.toLowerCase().includes(value.toLowerCase())\n        })\n        return dataFil;\n\n    },\n    async setInitialData() {\n        await dataLoadInitial();\n\n        return dataFullData;\n\n    }\n};\nexport default Initialization;","//Its an almost like Action to trigger the method on corresponding type.\n\nimport Initialization from \"./Initialization.js/Initialization\"\nconst MovieServices = {\n\n    loadData(dispatch, value) {\n        dispatch({\n            type: 'SET_ITEM',\n            payload: null\n        })\n        Initialization.getMethod(value).then(res => {\n            dispatch({\n                type: 'GET_ITEM',\n                payload: res\n            })\n        })\n            .catch(() => {\n                dispatch({\n                    type: 'ERROR_USERS',\n                    payload: null\n                })\n            })\n            .finally(() => {\n\n            })\n    },\n    loadFullData(dispatch) {\n        dispatch({\n            type: 'SET_DATA',\n            payload: null\n        })\n        Initialization.setInitialData().then(res => {\n            dispatch({\n                type: 'GET_DATA',\n                payload: res\n            })\n        })\n            .catch(() => {\n                dispatch({\n                    type: 'ERROR_USERS',\n                    payload: null\n                })\n            })\n            .finally(() => {\n\n            })\n\n    }\n\n}\nexport default MovieServices;","// This is the main file for the Data.\n\nimport { useRef } from \"react\";\nimport clsx from \"clsx\";\nimport useLazyLoad from \"../../Reducers/useLazyLoad\";\n// eslint-disable-next-line\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@mui/material/Typography';\nimport datapage1 from \"../../Data/CONTENTLISTINGPAGE-PAGE1.json\"\nimport datapage2 from \"../../Data/CONTENTLISTINGPAGE-PAGE2.json\"\nimport datapage3 from \"../../Data/CONTENTLISTINGPAGE-PAGE3.json\"\n\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieServices from \"../../MovieServices/MovieServices\"\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n// eslint-disable-next-line\nimport React, { lazy, useEffect } from 'react';\n//styles for the paper and the inputbase\nconst useStyles = makeStyles(theme => ({\n    root: {\n        overflow: \"hidden\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        marginLeft: 20,\n        marginTop: 0,\n        backgroundColor: \"#464b52\",\n        padding: \"1px 15px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    focused: {\n        backgroundColor: \"White\",\n        borderColor: \"2px solid green\",\n        borderWidth: 10\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1\n    },\n    iconfocus: {\n        color: \"black\"\n    },\n    iconButton: {\n        padding: 10\n    },\n\n}));\n// this is for number of data load at a time and pages \nconst NUM_PER_PAGE = 20;\nconst TOTAL_PAGES = 4;\nlet dataFullData = [];\n// dummy thing to load the data from json file\nconst dataLoadInitial = () => {\n    const data1page = datapage1.page[\"content-items\"].content;\n    const data2page = datapage2.page[\"content-items\"].content;\n    const data3page = datapage3.page[\"content-items\"].content;\n    dataFullData = [...data1page, ...data2page, ...data3page]\n}\n\n\nlet countPage = 1;\nconst Posts = () => {\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dataLoadInitial();\n        // MovieServices.loadFullData(dispatch);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n    // eslint-disable-next-line\n    const [height, setHeight] = React.useState(window.innerHeight);\n    const moviesSearch = useSelector((state) => state.searchlist);\n    const storeDataSaved = useSelector((state) => state);\n    const [value, setValue] = React.useState()\n    const [search, setSearch] = React.useState(false)\n    const classes = useStyles();\n    const triggerRef = useRef(null);\n    // search by key method\n    const searchBykey = async () => {\n        let dataSearch = value.trim().length > 0 ? true : false;\n        if (dataSearch) {\n            setSearch(true)\n        }\n        else {\n            setSearch(false)\n        }\n        await MovieServices.loadData(dispatch, value);\n\n    }\n    // this is for dimension update\n    const updateDimensions = () => {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => window.removeEventListener(\"resize\", updateDimensions);\n\n    }, []);\n\n\n    const onChange = (event) => {\n\n        setValue(event.target.value);\n\n    };\n    // this ongrabdata will load depends on page number, for api/ pagination we can write the logic to append the data\n    const onGrabData = (currentPage) => {\n        countPage++;\n\n        if (currentPage <= 4) {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    const data = dataFullData.slice(\n                        ((currentPage - 1) % TOTAL_PAGES) * NUM_PER_PAGE,\n                        NUM_PER_PAGE * (currentPage % TOTAL_PAGES)\n                    );\n                    dispatch({\n                        type: 'GET_DATA_UPDATE',\n                        payload: data\n                    })\n                    resolve(data);\n                }, 3000);\n\n            });\n        }\n        else {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    if (currentPage <= 4) {\n                        const data = dataFullData.slice(\n                            ((currentPage - 1) % TOTAL_PAGES) * NUM_PER_PAGE,\n                            NUM_PER_PAGE * (currentPage % TOTAL_PAGES)\n                        );\n                        resolve(data);\n                        dispatch({\n                            type: 'GET_DATA_UPDATE',\n                            payload: data\n                        })\n                    }\n                    else {\n                        resolve(null);\n                    }\n                }, 3000);\n            })\n        }\n    };\n    // eslint-disable-next-line \n    const { data, loading } = useLazyLoad({ triggerRef, onGrabData });\n\n    return (\n        <>\n            <div style={{ backgroundColor: 'black', minHeight: 900 }}>\n                <div>\n                    <Paper component=\"form\" className={classes.root} style={{ width: width - (width / 5) }}>\n\n                        <InputBase\n                            classes={{ root: classes.root, focused: classes.focused }}\n                            placeholder=\"Search Movies\"\n                            inputProps={{ \"aria-label\": \"search\" }}\n                            onChange={onChange}\n\n                        />\n                        <IconButton\n                            onClick={\n                                searchBykey}\n                            className={classes.iconButton}\n                            aria-label=\"search\"\n                        >\n                            <SearchIcon style={{ color: \"white\" }}\n                            />\n                        </IconButton>\n\n                    </Paper>\n                </div>\n\n                {!search && <div style={{ padding: 20 }}>\n                    <ImageList sx={{ width: \"100%\", height: \"100%\" }} cols={3} rowHeight={190} >\n                        {storeDataSaved?.data?.data?.map((item, i) => (\n\n                            <ImageListItem key={item.id}>\n                                <img\n                                    style={{ width: width / 3 - 20, height: 120, objectFit: \"fill\" }}\n\n                                    src={item.posterimage}\n\n                                    alt={item.name}\n\n                                />\n                                <div style={{ justifyContent: \"center\", alignItems: \"center\", height: 30 }}>\n                                    <Typography style={{\n                                        color: \"#FFFFFF\", alignItems: \"flex-start\", fontSize: 10, overflow: \"hidden\"\n                                    }}>\n                                        {item.name}\n                                    </Typography>\n\n                                </div>\n                            </ImageListItem>\n                        ))}\n                    </ImageList></div>}\n                {search &&\n                    <div style={{ padding: 20 }}>\n                        {moviesSearch.searchItem.length > 0 &&\n                            <ImageList sx={{ width: \"100%\", height: \"100%\" }} cols={3} rowHeight={164} >\n                                {moviesSearch.searchItem.map((item, i) => (\n\n                                    <ImageListItem key={item.id}>\n                                        <img\n                                            style={{ width: width / 3 - 20, height: 120, objectFit: \"fill\" }}\n\n                                            src={item.posterimage}\n                                            alt={item.name}\n                                        />\n                                        <div style={{ justifyContent: \"center\", alignItems: \"center\", height: 30 }}>\n                                            <Typography style={{\n                                                color: \"#FFFFFF\", alignItems: \"flex-start\", fontSize: 10, overflow: \"hidden\"\n                                            }}>\n                                                {item.name}\n                                            </Typography>\n                                        </div>\n                                    </ImageListItem>\n                                ))}\n                            </ImageList>}\n                        {moviesSearch.searchItem.length === 0 &&\n                            <div style={{ textAlign: \"center\" }}>\n                                <p style={{ color: \"white\" }}>    No movie with this name.</p>\n                            </div>\n                        }\n                    </div>\n                }\n                {countPage <= 4 && !search &&\n                    <div ref={triggerRef} className={clsx(\"trigger\", { visible: loading })}>\n                        {loading && <div style={{ textAlign: \"center\" }}>\n                            <p style={{ color: \"white\" }}> Loading...</p>\n                        </div>}\n                    </div>\n\n                }\n                {countPage > 4 && !search &&\n                    <div >\n                        <div style={{ textAlign: \"center\" }}>\n                            <p style={{ color: \"white\" }}>   No More Data...</p>\n                        </div>\n                    </div>\n                }\n            </div>\n        </>\n    );\n}\n\n\nexport default Posts;"],"names":["reducer","state","action","type","payload","data","loading","currentPage","triggerRef","onGrabData","options","useReducer","dispatch","_handleEntry","entry","boundingRect","boundingClientRect","intersectionRect","isIntersecting","bottom","handleEntry","debounce","onIntersect","useCallback","entries","useEffect","current","container","observer","IntersectionObserver","observe","disconnect","dataFullData","dataLoadInitial","data1page","datapage1","data2page","datapage2","data3page","datapage3","getMethod","value","dataFil","filter","item","name","toLowerCase","includes","setInitialData","loadData","Initialization","then","res","catch","finally","loadFullData","useStyles","makeStyles","theme","root","overflow","justifyContent","textAlign","marginLeft","marginTop","backgroundColor","padding","display","alignItems","focused","borderColor","borderWidth","input","spacing","flex","iconfocus","color","iconButton","countPage","useDispatch","React","window","innerWidth","width","setWidth","innerHeight","setHeight","moviesSearch","useSelector","searchlist","storeDataSaved","setValue","search","setSearch","classes","useRef","searchBykey","dataSearch","trim","length","MovieServices","updateDimensions","addEventListener","removeEventListener","useLazyLoad","Promise","resolve","setTimeout","slice","style","minHeight","Paper","component","className","InputBase","placeholder","inputProps","onChange","event","target","IconButton","onClick","Search","ImageList","sx","height","cols","rowHeight","map","i","ImageListItem","objectFit","src","posterimage","alt","Typography","fontSize","id","searchItem","ref","clsx","visible"],"sourceRoot":""}